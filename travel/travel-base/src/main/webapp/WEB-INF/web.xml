<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!-- 1、SpringMVC本身是运行在Spring容器之中，所以需要定义一个Spring容器的基本配置文件路径 -->
    <context-param> <!-- 配置全局的初始化参数，这个参数依靠ServletContext.getInitParameter()获取 -->
        <param-name>contextConfigLocation</param-name>  <!-- 属性标准名称 -->
        <!-- 所有的Spring配置文件只允许加载一次，不要重复加载 -->
        <param-value>classpath:spring/spring-base.xml</param-value>
    </context-param>
    <!-- 2、通过WEB容器启动的时候实现Spring容器的启动操作 -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <!-- 3、配置SpringMVC的分发处理Servlet，利用此Servlet找到所有的Action -->
    <servlet>
        <servlet-name>SpringMVCServlet</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <!-- 此时配置的是SpringMVC的启动文件，该配置文件不要重复的加载 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVCServlet</servlet-name>
        <url-pattern>*.action</url-pattern> <!-- 设置访问处理路径 -->
        <url-pattern>/</url-pattern> <!-- 静态资源映射 -->
    </servlet-mapping>

    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>



    <!-- 4、配置项目中的编码过滤器 -->
    <filter>
        <filter-name>EncodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>EncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 进行shiro的过滤器的配置 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <!-- 该参数表示shiro的生命周期将交由Spring容器进行管理（默认情况下，取值为false） -->
        <!-- 如果将其内容设置为true，则表示由Servlet容器进行管理 -->
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!--Druid过滤器配置-->
    <filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!--验证码配置-->
    <!--<servlet>			&lt;!&ndash; 验证码功能 &ndash;&gt;-->
        <!--<servlet-name>KaptchaServlet</servlet-name>-->
        <!--<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>-->
        <!--<init-param>	&lt;!&ndash; 定义是否存在有边框 &ndash;&gt;-->
            <!--<param-name>kaptcha.border</param-name>-->
            <!--<param-value>no</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 定义边框颜色 &ndash;&gt;-->
            <!--<param-name>kaptcha.border.color</param-name>-->
            <!--<param-value>105,179,90</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置字体颜色 &ndash;&gt;-->
            <!--<param-name>kaptcha.textproducer.font.color</param-name>-->
            <!--<param-value>red</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置生成图片宽度 &ndash;&gt;-->
            <!--<param-name>kaptcha.image.width</param-name>-->
            <!--<param-value>130</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置生成图片高度 &ndash;&gt;-->
            <!--<param-name>kaptcha.image.height</param-name>-->
            <!--<param-value>38</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置验证码显示文字尺寸 &ndash;&gt;-->
            <!--<param-name>kaptcha.textproducer.font.size</param-name>-->
            <!--<param-value>30</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置验证码保存到session中的属性名称 &ndash;&gt;-->
            <!--<param-name>kaptcha.session.key</param-name>-->
            <!--<param-value>rand</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置字符间距 &ndash;&gt;-->
            <!--<param-name>kaptcha.textproducer.char.space</param-name>-->
            <!--<param-value>2</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置生成的验证码长度 &ndash;&gt;-->
            <!--<param-name>kaptcha.textproducer.char.length</param-name>-->
            <!--<param-value>4</param-value>-->
        <!--</init-param>-->
        <!--<init-param>	&lt;!&ndash; 设置使用的字体 &ndash;&gt;-->
            <!--<param-name>kaptcha.textproducer.font.names</param-name>-->
            <!--<param-value>宋体,楷体,微软雅黑</param-value>-->
        <!--</init-param>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>KaptchaServlet</servlet-name>-->
        <!--<url-pattern>/kaptcha.jpg</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--end-->

    <error-page>
        <exception-type>
            org.apache.shiro.authz.UnauthenticatedException
        </exception-type>
        <location>/login.jsp</location>
    </error-page>
    <error-page>
        <exception-type>
            org.apache.shiro.authz.UnauthorizedException
        </exception-type>
        <location>/unauth.jsp</location>
    </error-page>
    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>


