<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            https://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.chinatelecom.action"/>
    <mvc:annotation-driven/>    <!-- 启用控制层的注解配置模式 -->
    <mvc:default-servlet-handler/>  <!-- 使用之前配置的DispatcherServlet类处理请求 -->
    <!-- shiro注解在控制层的开启！若不开启，shiro注解开启无效，增加shiro的相关配置操作，针对action层权限检测 -->
    <!-- 启动在Shiro里面进行Annotation的相关验证处理操作 -->
    <bean id="controllerDefaultAdvisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <!-- 进行目标程序类的代理控制 -->
        <property name="proxyTargetClass" value="true" />
    </bean>
    <!-- 针对于安全管理实现的AOP处理操作 -->
    <bean id="controllerAuthorizationAttributeSourceAdvisor"
          class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!--shiro-action-end-->


    <!-- 定义一个页面资源解析的处理类，该类的主要功能是匹配路径的前缀与后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>   <!-- 路径前缀配置 -->
        <property name="suffix" value=".jsp"/> <!-- 匹配路径后缀 -->
    </bean>
    <!-- 为保存在WEB-INF下所有的静态资源设置映射访问路径 -->
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
    <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
    <mvc:resources location="/WEB-INF/dist/" mapping="/dist/**"/>
    <mvc:resources location="/WEB-INF/images/" mapping="/images/**"/>
    <mvc:resources location="/WEB-INF/bootstrap/" mapping="/bootstrap/**"/>
    <mvc:resources location="/WEB-INF/jquery/" mapping="/jquery/**"/>
    <mvc:resources location="/WEB-INF/upload/" mapping="/upload/**"/>

    <!-- 进行拦截器的访问路径的匹配 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/pages/**/*.action"/>    <!-- 定义拦截器的匹配路径 -->
            <bean class="com.chinatelecom.interceptor.ValidationInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 进行所有要加载的“*.properties”配置文件的路径定义，直接通过CLASSPATH加载 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list> <!-- basename是只包含有包名称和文件名称的组成，不包含有后缀 -->
                <value>com.chinatelecom.message.message</value>
                <value>com.chinatelecom.message.pages</value>
                <value>com.chinatelecom.message.validation</value>
            </list>
        </property>
    </bean>

    <!-- 进行上传文件组件的相关配置，配置的是上传文件的解析处理类 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置整体上传文件的最大数据量，本次允许上传最大文件量为5M -->
        <property name="maxUploadSize" value="52428800"/>
        <!-- 设置单个上传文件的最大数据量，本次允许上传最大文件量为2M -->
        <property name="maxUploadSizePerFile" value="2539520"/>
        <!-- 允许占用的最大内存量，本次设置为10M -->
        <property name="maxInMemorySize" value="104857600"/>
        <!-- 设置上传文件的临时保存目录，该目录的内容在每一次请求之后都需要清空 -->
        <property name="uploadTempDir" value="/tmp"/>
    </bean>

    <!-- 定义一个全局的跳转路径配置 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings"> <!-- 进行异常映射的处理配置 -->
            <props>
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">
                    plugins/errors
                </prop>
            </props>
        </property>
    </bean>

</beans>